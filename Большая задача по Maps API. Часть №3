import os
import sys
import requests
import pygame

pygame.init()
size = w, h = 600, 400
screen = pygame.display.set_mode(size)

url = 'https://static-maps.yandex.ru/v1'

z_min = 1
z_max = 21
z = 13
ll_x, ll_y = 18.069628, 59.324612
step = 0.5
params = {
    'apikey': "4e60121e-3e68-41f0-bd84-eced30775d1c",
    'll': f'{ll_x},{ll_y}',
    'z': str(z)
}

response = requests.get(url, params)
if not response:
    print(f'{response.status_code} {response.reason}')
    sys.exit(1)

with open('map.png', mode='wb') as f:
    f.write(response.content)

running = True
map_image = pygame.image.load('map.png')
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_PAGEUP and z < z_max:
                z += 1
            elif event.key == pygame.K_PAGEDOWN and z > z_min:
                z -= 1
            elif event.key == pygame.K_UP:
                ll_y = min(ll_y + step, 85)
            elif event.key == pygame.K_DOWN:
                ll_y = max(ll_y - step, -85)
            elif event.key == pygame.K_LEFT:
                ll_x = max(ll_x - step, -180)
            elif event.key == pygame.K_RIGHT:
                ll_x = min(ll_x + step, 180)

            params['ll'] = f'{ll_x},{ll_y}'
            params['z'] = str(z)
            response = requests.get(url, params)
            if response:
                with open('map.png', mode='wb') as f:
                    f.write(response.content)
                map_image = pygame.image.load('map.png')

    screen.blit(map_image, (0, 0))
    pygame.display.flip()

os.remove('map.png')
pygame.quit()
